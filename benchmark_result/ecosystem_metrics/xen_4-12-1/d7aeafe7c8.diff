From d7aeafe7c80c98e36eaa1f15feb65605982ff1bb Mon Sep 17 00:00:00 2001
From: Nicholas Tsirakis <tsirakisn@ainfosec.com>
Date: Fri, 26 Jul 2019 11:00:19 +0200
Subject: [PATCH] argo: suppress select logging messages

Some logging messages made more sense as argo debug
logs rather than standard Xen logs. Use argo_dprintk
to only print this info if argo DEBUG is enabled.

Signed-off-by: Nicholas Tsirakis <tsirakisn@ainfosec.com>
Reviewed-by: Christopher Clark <christopher.w.clark@gmail.com>
master commit: 7abd7c21b9c456c9f83d0d09ccea5627ae62c3d4
master date: 2019-06-19 21:14:05 +0100
---
 xen/common/argo.c | 31 +++++++++++++++----------------
 1 file changed, 15 insertions(+), 16 deletions(-)

diff --git a/xen/common/argo.c b/xen/common/argo.c
index c8f4302963..2b91e94499 100644
--- a/xen/common/argo.c
+++ b/xen/common/argo.c
@@ -1456,10 +1456,10 @@ find_ring_mfns(struct domain *d, struct argo_ring_info *ring_info,
     if ( ring_info->mfns )
     {
         /* Ring already existed: drop the previous mapping. */
-        gprintk(XENLOG_INFO, "argo: vm%u re-register existing ring "
-                "(vm%u:%x vm%u) clears mapping\n",
-                d->domain_id, ring_info->id.domain_id,
-                ring_info->id.aport, ring_info->id.partner_id);
+        argo_dprintk("argo: vm%u re-register existing ring "
+                     "(vm%u:%x vm%u) clears mapping\n",
+                     d->domain_id, ring_info->id.domain_id,
+                     ring_info->id.aport, ring_info->id.partner_id);
 
         ring_remove_mfns(d, ring_info);
         ASSERT(!ring_info->mfns);
@@ -1516,11 +1516,11 @@ find_ring_mfns(struct domain *d, struct argo_ring_info *ring_info,
     {
         ASSERT(ring_info->nmfns == NPAGES_RING(len));
 
-        gprintk(XENLOG_DEBUG, "argo: vm%u ring (vm%u:%x vm%u) %p "
-                "mfn_mapping %p len %u nmfns %u\n",
-                d->domain_id, ring_info->id.domain_id,
-                ring_info->id.aport, ring_info->id.partner_id, ring_info,
-                ring_info->mfn_mapping, ring_info->len, ring_info->nmfns);
+        argo_dprintk("argo: vm%u ring (vm%u:%x vm%u) %p "
+                     "mfn_mapping %p len %u nmfns %u\n",
+                     d->domain_id, ring_info->id.domain_id,
+                     ring_info->id.aport, ring_info->id.partner_id, ring_info,
+                     ring_info->mfn_mapping, ring_info->len, ring_info->nmfns);
     }
 
     return ret;
@@ -1730,9 +1730,9 @@ register_ring(struct domain *currd,
         list_add(&ring_info->node,
                  &currd->argo->ring_hash[hash_index(&ring_info->id)]);
 
-        gprintk(XENLOG_DEBUG, "argo: vm%u registering ring (vm%u:%x vm%u)\n",
-                currd->domain_id, ring_id.domain_id, ring_id.aport,
-                ring_id.partner_id);
+        argo_dprintk("argo: vm%u registering ring (vm%u:%x vm%u)\n",
+                     currd->domain_id, ring_id.domain_id, ring_id.aport,
+                     ring_id.partner_id);
     }
     else if ( ring_info->len )
     {
@@ -1770,10 +1770,9 @@ register_ring(struct domain *currd,
             goto out_unlock2;
         }
 
-        gprintk(XENLOG_DEBUG,
-                "argo: vm%u re-registering existing ring (vm%u:%x vm%u)\n",
-                currd->domain_id, ring_id.domain_id, ring_id.aport,
-                ring_id.partner_id);
+        argo_dprintk("argo: vm%u re-registering existing ring (vm%u:%x vm%u)\n",
+                     currd->domain_id, ring_id.domain_id, ring_id.aport,
+                     ring_id.partner_id);
     }
 
     ret = find_ring_mfns(currd, ring_info, npage, gfn_hnd, reg.len);
-- 
2.30.2

